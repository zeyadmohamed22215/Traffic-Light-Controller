;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08/08/2024 10:35:22 ã
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x296B      	GOTO       363
_Div_8X8_S:
;__Lib_Math.c,606 :: 		
;__Lib_Math.c,614 :: 		
0x0003	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,615 :: 		
0x0004	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,616 :: 		
0x0005	0x01FD      	CLRF       R13
;__Lib_Math.c,617 :: 		
0x0006	0x01F8      	CLRF       R8
;__Lib_Math.c,618 :: 		
0x0007	0x0870      	MOVF       R0, 0
;__Lib_Math.c,619 :: 		
0x0008	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,620 :: 		
0x0009	0x3400      	RETLW      0
;__Lib_Math.c,621 :: 		
0x000A	0x0674      	XORWF      R4, 0
;__Lib_Math.c,622 :: 		
0x000B	0x00FA      	MOVWF      R10
;__Lib_Math.c,623 :: 		
0x000C	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,624 :: 		
0x000D	0x09FD      	COMF       R13, 1
;__Lib_Math.c,625 :: 		
0x000E	0x01FB      	CLRF       R11
;__Lib_Math.c,626 :: 		
0x000F	0x1FF4      	BTFSS      R4, 7
;__Lib_Math.c,627 :: 		
0x0010	0x2813      	GOTO       $+3
;__Lib_Math.c,628 :: 		
0x0011	0x09F4      	COMF       R4, 1
;__Lib_Math.c,629 :: 		
0x0012	0x0AF4      	INCF       R4, 1
;__Lib_Math.c,630 :: 		
0x0013	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,631 :: 		
0x0014	0x2817      	GOTO       $+3
;__Lib_Math.c,632 :: 		
0x0015	0x09F0      	COMF       R0, 1
;__Lib_Math.c,633 :: 		
0x0016	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,634 :: 		
0x0017	0x0870      	MOVF       R0, 0
;__Lib_Math.c,635 :: 		
0x0018	0x0474      	IORWF      R4, 0
;__Lib_Math.c,636 :: 		
0x0019	0x00FA      	MOVWF      R10
;__Lib_Math.c,637 :: 		
0x001A	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,638 :: 		
0x001B	0x283B      	GOTO       $+32
;__Lib_Math.c,639 :: 		
0x001C	0x0874      	MOVF       R4, 0
;__Lib_Math.c,640 :: 		
0x001D	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,641 :: 		
0x001E	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,642 :: 		
0x001F	0x0D70      	RLF        R0, 0
;__Lib_Math.c,643 :: 		
0x0020	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,644 :: 		
0x0021	0x0874      	MOVF       R4, 0
;__Lib_Math.c,645 :: 		
0x0022	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,646 :: 		
0x0023	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,647 :: 		
0x0024	0x3006      	MOVLW      6
;__Lib_Math.c,648 :: 		
0x0025	0x00FC      	MOVWF      R12
;__Lib_Math.c,649 :: 		
0x0026	0x0D70      	RLF        R0, 0
;__Lib_Math.c,650 :: 		
0x0027	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,651 :: 		
0x0028	0x0874      	MOVF       R4, 0
;__Lib_Math.c,652 :: 		
0x0029	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,653 :: 		
0x002A	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,654 :: 		
0x002B	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,655 :: 		
0x002C	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,656 :: 		
0x002D	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,657 :: 		
0x002E	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,658 :: 		
0x002F	0x2826      	GOTO       $-9
;__Lib_Math.c,659 :: 		
0x0030	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,660 :: 		
0x0031	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,661 :: 		
0x0032	0x187B      	BTFSC      R11, 0
;__Lib_Math.c,662 :: 		
0x0033	0x2849      	GOTO       $+22
;__Lib_Math.c,663 :: 		
0x0034	0x1FFD      	BTFSS      R13, 7
;__Lib_Math.c,664 :: 		
0x0035	0x3400      	RETLW      0
;__Lib_Math.c,665 :: 		
0x0036	0x09F0      	COMF       R0, 1
;__Lib_Math.c,666 :: 		
0x0037	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,667 :: 		
0x0038	0x09F8      	COMF       R8, 1
;__Lib_Math.c,668 :: 		
0x0039	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,669 :: 		
0x003A	0x3400      	RETLW      0
;__Lib_Math.c,670 :: 		
0x003B	0x1FF4      	BTFSS      R4, 7
;__Lib_Math.c,671 :: 		
0x003C	0x2846      	GOTO       $+10
;__Lib_Math.c,672 :: 		
0x003D	0x1BF0      	BTFSC      R0, 7
;__Lib_Math.c,673 :: 		
0x003E	0x2843      	GOTO       $+5
;__Lib_Math.c,674 :: 		
0x003F	0x0870      	MOVF       R0, 0
;__Lib_Math.c,675 :: 		
0x0040	0x00F8      	MOVWF      R8
;__Lib_Math.c,676 :: 		
0x0041	0x01F0      	CLRF       R0
;__Lib_Math.c,677 :: 		
0x0042	0x2834      	GOTO       $-14
;__Lib_Math.c,678 :: 		
0x0043	0x01F0      	CLRF       R0
;__Lib_Math.c,679 :: 		
0x0044	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,680 :: 		
0x0045	0x3400      	RETLW      0
;__Lib_Math.c,681 :: 		
0x0046	0x09F0      	COMF       R0, 1
;__Lib_Math.c,682 :: 		
0x0047	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,683 :: 		
0x0048	0x281C      	GOTO       $-44
;__Lib_Math.c,684 :: 		
0x0049	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,685 :: 		
0x004A	0x0874      	MOVF       R4, 0
;__Lib_Math.c,686 :: 		
0x004B	0x0278      	SUBWF      R8, 0
;__Lib_Math.c,687 :: 		
0x004C	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,688 :: 		
0x004D	0x2834      	GOTO       $-25
;__Lib_Math.c,689 :: 		
0x004E	0x01F8      	CLRF       R8
;__Lib_Math.c,690 :: 		
0x004F	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,691 :: 		
0x0050	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,692 :: 		
0x0051	0x2834      	GOTO       $-29
;__Lib_Math.c,693 :: 		
0x0052	0x34FF      	RETLW      255
;__Lib_Math.c,695 :: 		
L_end_Div_8X8_S:
0x0053	0x0008      	RETURN
; end of _Div_8X8_S
_traffic:
;MyProject.c,12 :: 		void traffic(signed char counter) {
;MyProject.c,13 :: 		porte.b0 = 1;
0x0054	0x1283      	BCF        STATUS, 5
0x0055	0x1303      	BCF        STATUS, 6
0x0056	0x1409      	BSF        PORTE, 0
;MyProject.c,14 :: 		left = counter / 10;
0x0057	0x300A      	MOVLW      10
0x0058	0x00F4      	MOVWF      R4
0x0059	0x0826      	MOVF       FARG_traffic_counter, 0
0x005A	0x00F0      	MOVWF      R0
0x005B	0x2003      	CALL       _Div_8X8_S
0x005C	0x0870      	MOVF       R0, 0
0x005D	0x00A4      	MOVWF      _left
;MyProject.c,15 :: 		right = counter % 10;
0x005E	0x300A      	MOVLW      10
0x005F	0x00F4      	MOVWF      R4
0x0060	0x0826      	MOVF       FARG_traffic_counter, 0
0x0061	0x00F0      	MOVWF      R0
0x0062	0x2003      	CALL       _Div_8X8_S
0x0063	0x0878      	MOVF       R8, 0
0x0064	0x00F0      	MOVWF      R0
0x0065	0x0870      	MOVF       R0, 0
0x0066	0x00A5      	MOVWF      _right
;MyProject.c,16 :: 		portc = right;
0x0067	0x0870      	MOVF       R0, 0
0x0068	0x0087      	MOVWF      PORTC
;MyProject.c,17 :: 		delay_ms(10);
0x0069	0x301A      	MOVLW      26
0x006A	0x00FC      	MOVWF      R12
0x006B	0x30F8      	MOVLW      248
0x006C	0x00FD      	MOVWF      R13
L_traffic0:
0x006D	0x0BFD      	DECFSZ     R13, 1
0x006E	0x286D      	GOTO       L_traffic0
0x006F	0x0BFC      	DECFSZ     R12, 1
0x0070	0x286D      	GOTO       L_traffic0
0x0071	0x0000      	NOP
;MyProject.c,18 :: 		portd = left;
0x0072	0x0824      	MOVF       _left, 0
0x0073	0x0088      	MOVWF      PORTD
;MyProject.c,19 :: 		delay_ms(10);
0x0074	0x301A      	MOVLW      26
0x0075	0x00FC      	MOVWF      R12
0x0076	0x30F8      	MOVLW      248
0x0077	0x00FD      	MOVWF      R13
L_traffic1:
0x0078	0x0BFD      	DECFSZ     R13, 1
0x0079	0x2878      	GOTO       L_traffic1
0x007A	0x0BFC      	DECFSZ     R12, 1
0x007B	0x2878      	GOTO       L_traffic1
0x007C	0x0000      	NOP
;MyProject.c,20 :: 		}
L_end_traffic:
0x007D	0x0008      	RETURN
; end of _traffic
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x007E	0x1283      	BCF        STATUS, 5
0x007F	0x1303      	BCF        STATUS, 6
0x0080	0x0821      	MOVF       ___DoICPAddr+1, 0
0x0081	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0082	0x0820      	MOVF       ___DoICPAddr, 0
0x0083	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0084	0x0008      	RETURN
; end of _____DoICP
_west:
;MyProject.c,84 :: 		void west() {
;MyProject.c,85 :: 		for (counter = 3; counter >= 0; counter--) {
0x0085	0x3003      	MOVLW      3
0x0086	0x1283      	BCF        STATUS, 5
0x0087	0x1303      	BCF        STATUS, 6
0x0088	0x00A3      	MOVWF      _counter
L_west44:
0x0089	0x3080      	MOVLW      128
0x008A	0x0623      	XORWF      _counter, 0
0x008B	0x00F0      	MOVWF      R0
0x008C	0x3080      	MOVLW      128
0x008D	0x3A00      	XORLW      0
0x008E	0x0270      	SUBWF      R0, 0
0x008F	0x1C03      	BTFSS      STATUS, 0
0x0090	0x28A3      	GOTO       L_west45
;MyProject.c,86 :: 		red1 = 0;yellow1 = 1;green1 = 0;
0x0091	0x1086      	BCF        RB1_bit, BitPos(RB1_bit+0)
0x0092	0x1506      	BSF        RB2_bit, BitPos(RB2_bit+0)
0x0093	0x1186      	BCF        RB3_bit, BitPos(RB3_bit+0)
;MyProject.c,87 :: 		red2 = 0;yellow2 = 1;green2 = 0;
0x0094	0x1206      	BCF        RB4_bit, BitPos(RB4_bit+0)
0x0095	0x1686      	BSF        RB5_bit, BitPos(RB5_bit+0)
0x0096	0x1306      	BCF        RB6_bit, BitPos(RB6_bit+0)
;MyProject.c,88 :: 		for (i = 0; i <= 50; i++) {
0x0097	0x01A2      	CLRF       _i
L_west47:
0x0098	0x0822      	MOVF       _i, 0
0x0099	0x3C32      	SUBLW      50
0x009A	0x1C03      	BTFSS      STATUS, 0
0x009B	0x28A1      	GOTO       L_west48
;MyProject.c,89 :: 		traffic(counter);
0x009C	0x0823      	MOVF       _counter, 0
0x009D	0x00A6      	MOVWF      FARG_traffic_counter
0x009E	0x2054      	CALL       _traffic
;MyProject.c,88 :: 		for (i = 0; i <= 50; i++) {
0x009F	0x0AA2      	INCF       _i, 1
;MyProject.c,90 :: 		}
0x00A0	0x2898      	GOTO       L_west47
L_west48:
;MyProject.c,85 :: 		for (counter = 3; counter >= 0; counter--) {
0x00A1	0x03A3      	DECF       _counter, 1
;MyProject.c,91 :: 		}
0x00A2	0x2889      	GOTO       L_west44
L_west45:
;MyProject.c,92 :: 		for (counter = 23; counter >= 0; counter--) {
0x00A3	0x3017      	MOVLW      23
0x00A4	0x00A3      	MOVWF      _counter
L_west50:
0x00A5	0x3080      	MOVLW      128
0x00A6	0x0623      	XORWF      _counter, 0
0x00A7	0x00F0      	MOVWF      R0
0x00A8	0x3080      	MOVLW      128
0x00A9	0x3A00      	XORLW      0
0x00AA	0x0270      	SUBWF      R0, 0
0x00AB	0x1C03      	BTFSS      STATUS, 0
0x00AC	0x28C2      	GOTO       L_west51
;MyProject.c,93 :: 		red1 = 0;yellow1 = 0;green1 = 1;
0x00AD	0x1086      	BCF        RB1_bit, BitPos(RB1_bit+0)
0x00AE	0x1106      	BCF        RB2_bit, BitPos(RB2_bit+0)
0x00AF	0x1586      	BSF        RB3_bit, BitPos(RB3_bit+0)
;MyProject.c,94 :: 		red2 = 1;yellow2 = 0;green2 = 0;
0x00B0	0x1606      	BSF        RB4_bit, BitPos(RB4_bit+0)
0x00B1	0x1286      	BCF        RB5_bit, BitPos(RB5_bit+0)
0x00B2	0x1306      	BCF        RB6_bit, BitPos(RB6_bit+0)
;MyProject.c,95 :: 		if (portb.b0!=0) break;
0x00B3	0x1C06      	BTFSS      PORTB, 0
0x00B4	0x28B6      	GOTO       L_west53
0x00B5	0x28C2      	GOTO       L_west51
L_west53:
;MyProject.c,96 :: 		for (i = 0; i <=50; i++) {
0x00B6	0x01A2      	CLRF       _i
L_west54:
0x00B7	0x0822      	MOVF       _i, 0
0x00B8	0x3C32      	SUBLW      50
0x00B9	0x1C03      	BTFSS      STATUS, 0
0x00BA	0x28C0      	GOTO       L_west55
;MyProject.c,97 :: 		traffic(counter);
0x00BB	0x0823      	MOVF       _counter, 0
0x00BC	0x00A6      	MOVWF      FARG_traffic_counter
0x00BD	0x2054      	CALL       _traffic
;MyProject.c,96 :: 		for (i = 0; i <=50; i++) {
0x00BE	0x0AA2      	INCF       _i, 1
;MyProject.c,98 :: 		}
0x00BF	0x28B7      	GOTO       L_west54
L_west55:
;MyProject.c,92 :: 		for (counter = 23; counter >= 0; counter--) {
0x00C0	0x03A3      	DECF       _counter, 1
;MyProject.c,99 :: 		}
0x00C1	0x28A5      	GOTO       L_west50
L_west51:
;MyProject.c,100 :: 		}
L_end_west:
0x00C2	0x0008      	RETURN
; end of _west
_south:
;MyProject.c,67 :: 		void south() {
;MyProject.c,68 :: 		for (counter = 3; counter >= 0; counter--) {
0x00C3	0x3003      	MOVLW      3
0x00C4	0x1283      	BCF        STATUS, 5
0x00C5	0x1303      	BCF        STATUS, 6
0x00C6	0x00A3      	MOVWF      _counter
L_south31:
0x00C7	0x3080      	MOVLW      128
0x00C8	0x0623      	XORWF      _counter, 0
0x00C9	0x00F0      	MOVWF      R0
0x00CA	0x3080      	MOVLW      128
0x00CB	0x3A00      	XORLW      0
0x00CC	0x0270      	SUBWF      R0, 0
0x00CD	0x1C03      	BTFSS      STATUS, 0
0x00CE	0x28E1      	GOTO       L_south32
;MyProject.c,69 :: 		red1 = 0;yellow1 = 1;green1 = 0;
0x00CF	0x1086      	BCF        RB1_bit, BitPos(RB1_bit+0)
0x00D0	0x1506      	BSF        RB2_bit, BitPos(RB2_bit+0)
0x00D1	0x1186      	BCF        RB3_bit, BitPos(RB3_bit+0)
;MyProject.c,70 :: 		red2 = 0;yellow2 = 1;green2 = 0;
0x00D2	0x1206      	BCF        RB4_bit, BitPos(RB4_bit+0)
0x00D3	0x1686      	BSF        RB5_bit, BitPos(RB5_bit+0)
0x00D4	0x1306      	BCF        RB6_bit, BitPos(RB6_bit+0)
;MyProject.c,71 :: 		for (i = 0; i <= 50; i++) {
0x00D5	0x01A2      	CLRF       _i
L_south34:
0x00D6	0x0822      	MOVF       _i, 0
0x00D7	0x3C32      	SUBLW      50
0x00D8	0x1C03      	BTFSS      STATUS, 0
0x00D9	0x28DF      	GOTO       L_south35
;MyProject.c,72 :: 		traffic(counter);
0x00DA	0x0823      	MOVF       _counter, 0
0x00DB	0x00A6      	MOVWF      FARG_traffic_counter
0x00DC	0x2054      	CALL       _traffic
;MyProject.c,71 :: 		for (i = 0; i <= 50; i++) {
0x00DD	0x0AA2      	INCF       _i, 1
;MyProject.c,73 :: 		}
0x00DE	0x28D6      	GOTO       L_south34
L_south35:
;MyProject.c,68 :: 		for (counter = 3; counter >= 0; counter--) {
0x00DF	0x03A3      	DECF       _counter, 1
;MyProject.c,74 :: 		}
0x00E0	0x28C7      	GOTO       L_south31
L_south32:
;MyProject.c,75 :: 		for (counter = 15; counter >= 0; counter--) {
0x00E1	0x300F      	MOVLW      15
0x00E2	0x00A3      	MOVWF      _counter
L_south37:
0x00E3	0x3080      	MOVLW      128
0x00E4	0x0623      	XORWF      _counter, 0
0x00E5	0x00F0      	MOVWF      R0
0x00E6	0x3080      	MOVLW      128
0x00E7	0x3A00      	XORLW      0
0x00E8	0x0270      	SUBWF      R0, 0
0x00E9	0x1C03      	BTFSS      STATUS, 0
0x00EA	0x2900      	GOTO       L_south38
;MyProject.c,76 :: 		red1 = 1;yellow1 = 0;green1 = 0;
0x00EB	0x1486      	BSF        RB1_bit, BitPos(RB1_bit+0)
0x00EC	0x1106      	BCF        RB2_bit, BitPos(RB2_bit+0)
0x00ED	0x1186      	BCF        RB3_bit, BitPos(RB3_bit+0)
;MyProject.c,77 :: 		red2 = 0;yellow2 = 0;green2 = 1;
0x00EE	0x1206      	BCF        RB4_bit, BitPos(RB4_bit+0)
0x00EF	0x1286      	BCF        RB5_bit, BitPos(RB5_bit+0)
0x00F0	0x1706      	BSF        RB6_bit, BitPos(RB6_bit+0)
;MyProject.c,78 :: 		if (portb.b0!=0) break;
0x00F1	0x1C06      	BTFSS      PORTB, 0
0x00F2	0x28F4      	GOTO       L_south40
0x00F3	0x2900      	GOTO       L_south38
L_south40:
;MyProject.c,79 :: 		for (i = 0; i <= 50; i++) {
0x00F4	0x01A2      	CLRF       _i
L_south41:
0x00F5	0x0822      	MOVF       _i, 0
0x00F6	0x3C32      	SUBLW      50
0x00F7	0x1C03      	BTFSS      STATUS, 0
0x00F8	0x28FE      	GOTO       L_south42
;MyProject.c,80 :: 		traffic(counter);
0x00F9	0x0823      	MOVF       _counter, 0
0x00FA	0x00A6      	MOVWF      FARG_traffic_counter
0x00FB	0x2054      	CALL       _traffic
;MyProject.c,79 :: 		for (i = 0; i <= 50; i++) {
0x00FC	0x0AA2      	INCF       _i, 1
;MyProject.c,81 :: 		}
0x00FD	0x28F5      	GOTO       L_south41
L_south42:
;MyProject.c,75 :: 		for (counter = 15; counter >= 0; counter--) {
0x00FE	0x03A3      	DECF       _counter, 1
;MyProject.c,82 :: 		}
0x00FF	0x28E3      	GOTO       L_south37
L_south38:
;MyProject.c,83 :: 		}
L_end_south:
0x0100	0x0008      	RETURN
; end of _south
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0101	0x207E      	CALL       _____DoICP
0x0102	0x118A      	BCF        PCLATH, 3
0x0103	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0104	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0105	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0106	0x0AA0      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0107	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0108	0x0AA1      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0109	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x010A	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x010B	0x2901      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x010C	0x0008      	RETURN
; end of ___CC2DW
_automatic:
;MyProject.c,39 :: 		void automatic() {
;MyProject.c,40 :: 		for (;;) {
L_automatic8:
;MyProject.c,41 :: 		for (counter = 23; counter >= 0; counter--) {
0x010D	0x3017      	MOVLW      23
0x010E	0x1283      	BCF        STATUS, 5
0x010F	0x1303      	BCF        STATUS, 6
0x0110	0x00A3      	MOVWF      _counter
L_automatic11:
0x0111	0x3080      	MOVLW      128
0x0112	0x0623      	XORWF      _counter, 0
0x0113	0x00F0      	MOVWF      R0
0x0114	0x3080      	MOVLW      128
0x0115	0x3A00      	XORLW      0
0x0116	0x0270      	SUBWF      R0, 0
0x0117	0x1C03      	BTFSS      STATUS, 0
0x0118	0x293C      	GOTO       L_automatic12
;MyProject.c,42 :: 		if (portb.b0 == 0) {
0x0119	0x1806      	BTFSC      PORTB, 0
0x011A	0x2920      	GOTO       L_automatic14
;MyProject.c,43 :: 		if (porta.b0 == 0){south();}
0x011B	0x1805      	BTFSC      PORTA, 0
0x011C	0x291F      	GOTO       L_automatic15
0x011D	0x20C3      	CALL       _south
0x011E	0x2920      	GOTO       L_automatic16
L_automatic15:
;MyProject.c,44 :: 		else{west();}
0x011F	0x2085      	CALL       _west
L_automatic16:
;MyProject.c,45 :: 		}
L_automatic14:
;MyProject.c,46 :: 		red1 = 0;yellow1 = 1;green1 = 0;
0x0120	0x1086      	BCF        RB1_bit, BitPos(RB1_bit+0)
0x0121	0x1506      	BSF        RB2_bit, BitPos(RB2_bit+0)
0x0122	0x1186      	BCF        RB3_bit, BitPos(RB3_bit+0)
;MyProject.c,47 :: 		red2 = 1;yellow2 = 0;green2 = 0;
0x0123	0x1606      	BSF        RB4_bit, BitPos(RB4_bit+0)
0x0124	0x1286      	BCF        RB5_bit, BitPos(RB5_bit+0)
0x0125	0x1306      	BCF        RB6_bit, BitPos(RB6_bit+0)
;MyProject.c,48 :: 		if (counter <= 20) {yellow1 = 0;green1 = 1;}
0x0126	0x3080      	MOVLW      128
0x0127	0x3A14      	XORLW      20
0x0128	0x00F0      	MOVWF      R0
0x0129	0x3080      	MOVLW      128
0x012A	0x0623      	XORWF      _counter, 0
0x012B	0x0270      	SUBWF      R0, 0
0x012C	0x1C03      	BTFSS      STATUS, 0
0x012D	0x2930      	GOTO       L_automatic17
0x012E	0x1106      	BCF        RB2_bit, BitPos(RB2_bit+0)
0x012F	0x1586      	BSF        RB3_bit, BitPos(RB3_bit+0)
L_automatic17:
;MyProject.c,49 :: 		for (i = 0; i <= 50; i++) {
0x0130	0x01A2      	CLRF       _i
L_automatic18:
0x0131	0x0822      	MOVF       _i, 0
0x0132	0x3C32      	SUBLW      50
0x0133	0x1C03      	BTFSS      STATUS, 0
0x0134	0x293A      	GOTO       L_automatic19
;MyProject.c,50 :: 		traffic(counter);
0x0135	0x0823      	MOVF       _counter, 0
0x0136	0x00A6      	MOVWF      FARG_traffic_counter
0x0137	0x2054      	CALL       _traffic
;MyProject.c,49 :: 		for (i = 0; i <= 50; i++) {
0x0138	0x0AA2      	INCF       _i, 1
;MyProject.c,51 :: 		}
0x0139	0x2931      	GOTO       L_automatic18
L_automatic19:
;MyProject.c,41 :: 		for (counter = 23; counter >= 0; counter--) {
0x013A	0x03A3      	DECF       _counter, 1
;MyProject.c,52 :: 		}
0x013B	0x2911      	GOTO       L_automatic11
L_automatic12:
;MyProject.c,53 :: 		for (counter = 15; counter >= 0; counter--) {
0x013C	0x300F      	MOVLW      15
0x013D	0x00A3      	MOVWF      _counter
L_automatic21:
0x013E	0x3080      	MOVLW      128
0x013F	0x0623      	XORWF      _counter, 0
0x0140	0x00F0      	MOVWF      R0
0x0141	0x3080      	MOVLW      128
0x0142	0x3A00      	XORLW      0
0x0143	0x0270      	SUBWF      R0, 0
0x0144	0x1C03      	BTFSS      STATUS, 0
0x0145	0x2969      	GOTO       L_automatic22
;MyProject.c,54 :: 		if (portb.b0 == 0) {
0x0146	0x1806      	BTFSC      PORTB, 0
0x0147	0x294D      	GOTO       L_automatic24
;MyProject.c,55 :: 		if (porta.b0 == 0){south();}
0x0148	0x1805      	BTFSC      PORTA, 0
0x0149	0x294C      	GOTO       L_automatic25
0x014A	0x20C3      	CALL       _south
0x014B	0x294D      	GOTO       L_automatic26
L_automatic25:
;MyProject.c,56 :: 		else {west();}
0x014C	0x2085      	CALL       _west
L_automatic26:
;MyProject.c,57 :: 		}
L_automatic24:
;MyProject.c,58 :: 		red1 = 1;yellow1 = 0;green1 = 0;
0x014D	0x1486      	BSF        RB1_bit, BitPos(RB1_bit+0)
0x014E	0x1106      	BCF        RB2_bit, BitPos(RB2_bit+0)
0x014F	0x1186      	BCF        RB3_bit, BitPos(RB3_bit+0)
;MyProject.c,59 :: 		red2 = 0;yellow2 = 1;green2 = 0;
0x0150	0x1206      	BCF        RB4_bit, BitPos(RB4_bit+0)
0x0151	0x1686      	BSF        RB5_bit, BitPos(RB5_bit+0)
0x0152	0x1306      	BCF        RB6_bit, BitPos(RB6_bit+0)
;MyProject.c,60 :: 		if (counter <= 12) {yellow2 = 0;green2 = 1;}
0x0153	0x3080      	MOVLW      128
0x0154	0x3A0C      	XORLW      12
0x0155	0x00F0      	MOVWF      R0
0x0156	0x3080      	MOVLW      128
0x0157	0x0623      	XORWF      _counter, 0
0x0158	0x0270      	SUBWF      R0, 0
0x0159	0x1C03      	BTFSS      STATUS, 0
0x015A	0x295D      	GOTO       L_automatic27
0x015B	0x1286      	BCF        RB5_bit, BitPos(RB5_bit+0)
0x015C	0x1706      	BSF        RB6_bit, BitPos(RB6_bit+0)
L_automatic27:
;MyProject.c,61 :: 		for (i = 0; i <= 50; i++) {
0x015D	0x01A2      	CLRF       _i
L_automatic28:
0x015E	0x0822      	MOVF       _i, 0
0x015F	0x3C32      	SUBLW      50
0x0160	0x1C03      	BTFSS      STATUS, 0
0x0161	0x2967      	GOTO       L_automatic29
;MyProject.c,62 :: 		traffic(counter);
0x0162	0x0823      	MOVF       _counter, 0
0x0163	0x00A6      	MOVWF      FARG_traffic_counter
0x0164	0x2054      	CALL       _traffic
;MyProject.c,61 :: 		for (i = 0; i <= 50; i++) {
0x0165	0x0AA2      	INCF       _i, 1
;MyProject.c,63 :: 		}
0x0166	0x295E      	GOTO       L_automatic28
L_automatic29:
;MyProject.c,53 :: 		for (counter = 15; counter >= 0; counter--) {
0x0167	0x03A3      	DECF       _counter, 1
;MyProject.c,64 :: 		}
0x0168	0x293E      	GOTO       L_automatic21
L_automatic22:
;MyProject.c,65 :: 		}
0x0169	0x290D      	GOTO       L_automatic8
;MyProject.c,66 :: 		}
L_end_automatic:
0x016A	0x0008      	RETURN
; end of _automatic
_main:
;MyProject.c,21 :: 		void main() {
;MyProject.c,22 :: 		ADCON1 = 0x07;
0x016B	0x3007      	MOVLW      7
0x016C	0x1683      	BSF        STATUS, 5
0x016D	0x1303      	BCF        STATUS, 6
0x016E	0x009F      	MOVWF      ADCON1
;MyProject.c,23 :: 		trisb = 0b00000001;
0x016F	0x3001      	MOVLW      1
0x0170	0x0086      	MOVWF      TRISB
;MyProject.c,24 :: 		trisc = 0x00;
0x0171	0x0187      	CLRF       TRISC
;MyProject.c,25 :: 		trisd = 0x00;
0x0172	0x0188      	CLRF       TRISD
;MyProject.c,26 :: 		trisa = 0xff;
0x0173	0x30FF      	MOVLW      255
0x0174	0x0085      	MOVWF      TRISA
;MyProject.c,27 :: 		trise = 0x00;
0x0175	0x0189      	CLRF       TRISE
;MyProject.c,28 :: 		while (1) {
L_main2:
;MyProject.c,29 :: 		if (portb.b0 == 0){
0x0176	0x1283      	BCF        STATUS, 5
0x0177	0x1806      	BTFSC      PORTB, 0
0x0178	0x297F      	GOTO       L_main4
;MyProject.c,30 :: 		if (porta.b0 == 0){south();}
0x0179	0x1805      	BTFSC      PORTA, 0
0x017A	0x297D      	GOTO       L_main5
0x017B	0x20C3      	CALL       _south
0x017C	0x297E      	GOTO       L_main6
L_main5:
;MyProject.c,31 :: 		else{west();}
0x017D	0x2085      	CALL       _west
L_main6:
;MyProject.c,32 :: 		}
0x017E	0x2980      	GOTO       L_main7
L_main4:
;MyProject.c,35 :: 		automatic();
0x017F	0x210D      	CALL       _automatic
L_main7:
;MyProject.c,36 :: 		}
0x0180	0x2976      	GOTO       L_main2
;MyProject.c,37 :: 		}
L_end_main:
0x0181	0x2981      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [81]    _Div_8X8_S
0x0054      [42]    _traffic
0x007E       [7]    _____DoICP
0x0085      [62]    _west
0x00C3      [62]    _south
0x0101      [12]    ___CC2DW
0x010D      [94]    _automatic
0x016B      [23]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0006       [0]    green2
0x0006       [0]    yellow2
0x0006       [0]    RB5_bit
0x0006       [0]    RB4_bit
0x0006       [1]    PORTB
0x0006       [0]    red2
0x0006       [0]    yellow1
0x0006       [0]    red1
0x0006       [0]    green1
0x0006       [0]    RB6_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB1_bit
0x0006       [0]    RB2_bit
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x0009       [1]    PORTE
0x000A       [1]    PCLATH
0x0020       [2]    ___DoICPAddr
0x0022       [1]    _i
0x0023       [1]    _counter
0x0024       [1]    _left
0x0025       [1]    _right
0x0026       [1]    FARG_traffic_counter
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x0089       [1]    TRISE
0x009F       [1]    ADCON1
//** Label List: ** 
//----------------------------------------------
  L_traffic0
  L_traffic1
  L_main2
  L_main3
  L_main4
  L_main5
  L_main6
  L_main7
  L_automatic8
  L_automatic9
  L_automatic10
  L_automatic11
  L_automatic12
  L_automatic13
  L_automatic14
  L_automatic15
  L_automatic16
  L_automatic17
  L_automatic18
  L_automatic19
  L_automatic20
  L_automatic21
  L_automatic22
  L_automatic23
  L_automatic24
  L_automatic25
  L_automatic26
  L_automatic27
  L_automatic28
  L_automatic29
  L_automatic30
  L_south31
  L_south32
  L_south33
  L_south34
  L_south35
  L_south36
  L_south37
  L_south38
  L_south39
  L_south40
  L_south41
  L_south42
  L_south43
  L_west44
  L_west45
  L_west46
  L_west47
  L_west48
  L_west49
  L_west50
  L_west51
  L_west52
  L_west53
  L_west54
  L_west55
  L_west56
  L_end_traffic
  _traffic
  L_end_main
  _main
  L_end_automatic
  _automatic
  L_end_south
  _south
  L_end_west
  _west
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8X8_U
  _Mul_8X8_U
  L_end_Mul_16X16_U
  _Mul_16X16_U
  L_end_Div_8X8_U
  _Div_8X8_U
  L_end_Div_16X16_U
  _Div_16X16_U
  L_end_Mul_8X8_S
  _Mul_8X8_S
  L_end_Mul_16X16_S
  _Mul_16X16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8X8_S
  _Div_8X8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
